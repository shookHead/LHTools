#!/usr/local/bin/python3
# coding=utf-8
#-*- coding:utf-8-*-
#Â§ÑÁêÜ‰∏≠ÊñáÂ≠óÁ¨¶ÁöÑÊÉÖÂÜµ
import sys
import imp
imp.reload(sys)
#sys.setdefaultencoding('utf-8')
 
import os
import re
import codecs
 
# ÊêúÂØª‰ª•‰∏ãÊñá‰ª∂Á±ªÂûã
#suf_set = (".m", ".swift", ".xib", ".storyboard")
suf_set = (".m", ".swift", ".storyboard")
# È°πÁõÆË∑ØÂæÑ
project_path = os.path.split(os.path.realpath(__file__))[0]

def logYellow(str):
    print("\033[36m%s\033[0m"%(str))
def logRed(str):
    print("\033[31m%s\033[0m"%(str))
def logLightRed(str):
    print("\033[35m%s\033[0m"%(str))
def logCyanLink(str):
    print("\033[4;36m%s\033[0m"%(str))

# ÂøΩÁï•Êñá‰ª∂
ignoreFileNames = ["LanguageManager.swift","LaunchScreen.storyboard"]
# ÊØîÂ¶ÇÊâπÈáèÂ§ÑÁêÜËøáÁöÑÁ±ª
repairFileNames = [""]
ignoreFileNames.extend(repairFileNames)

separatorStr = "--*--"
codeStr = {"",}
xibStr = {"",}
wholePathStr = {"",}
codeCNNum = 0
xibCNNum = 0
logYellow("üõ´Ô∏èüõ´Ô∏èüõ´Ô∏èüõ´Ô∏èüõ´Ô∏èÈÅçÂéÜÂºÄÂßãüõ´Ô∏èüõ´Ô∏èüõ´Ô∏èüõ´Ô∏èüõ´Ô∏è")
for (root, dirs, files) in os.walk(project_path):
    for file_name in files:
        if file_name.endswith(suf_set):
            if file_name in ignoreFileNames:
                continue
            with open(os.path.join(root, file_name), 'r+') as f:
                print("********%s********" % (file_name))
                lineList = f.readlines()
                f.close()
                isComment = False
                for str in lineList:
                    str = str.encode('utf-8').decode('utf-8')
                    str = str.strip()
                    # log assertÁ±ªÂûã ÂøΩÁï•
                    if  str.startswith("//") or str.startswith("DYYLog") or str.startswith("NSLog") or str.startswith("print") or str.startswith("NSAssert") or str.startswith("assert") or str.startswith("UMSocialLogWithLocalizedKey("):
                        continue
                    if str.startswith("/*"):
                        isComment = True
                    if str.endswith("*/"):
                        isComment = False
                    if isComment:
                        continue
                    # ÂåπÈÖçÂåÖÂê´‰∏≠Êñá
                    matchObjs = re.findall(u'"[^"]*[\u4E00-\u9FA5]+[^"\n]*?"', str, re.M|re.S)
                    if matchObjs and len(matchObjs) > 0:
                        for cnStr in matchObjs:
                            # Â∑≤Êú¨Âú∞ÂåñÂàôÂøΩÁï•
                            locali1 = "JJLocalized(" + cnStr
                            locali2 = "JJLocalized(@" + cnStr
                            locali3 = cnStr + ".localizedString"
                            locali4 = "resourceName:" + cnStr
                            locali5 = ".init(named: " + cnStr
                            locali6 = "NetworkReachabilityManager(host: " + cnStr
                            locali7 = "changeTextChange(regex: " + cnStr
                            locali8 = "hex(" + cnStr

                            locali9 = "dic[" + cnStr
                            locali10 = "Dic[" + cnStr
                            locali11 = ".hex(" + cnStr
                            locali12 = cnStr + ".sameString"
                            locali13 = "params[" + cnStr
                            locali14 = "param[" + cnStr
                            locali15 = cnStr + ".localizedImage"
                            if locali1 in str or locali2 in str or locali3 in str or locali4 in str or locali5 in str or locali6 in str or locali7 in str or locali8 in str or locali9 in str or locali10 in str or locali11 in str or locali12 in str or locali13 in str or locali14 in str or locali15 in str:
                                continue
                            isXibFile = ".xib" in file_name or ".storyboard" in file_name
                            if isXibFile:
                                xibTip = file_name + separatorStr + cnStr + "\n"
                                #xibTip = cnStr + "\n"
                                if not xibTip in xibStr:
                                    xibCNNum = xibCNNum + 1
                                    logLightRed(xibTip.strip())
                                    xibStr.add(xibTip)
                            #newData = file_name + separatorStr + cnStr + "\n"
                            newData = cnStr + " = " + "\"\";" + "\n" + ""
                            wholePath = os.path.join(root, file_name) + separatorStr + cnStr + "\n"
                            # ÂéªÈáç
                            if not newData in codeStr:
                                codeStr.add(newData)
                                if not isXibFile:
                                    codeCNNum = codeCNNum + 1
                                    logRed(newData.strip())
                                    wholePathStr.add(wholePath)

logYellow("üõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏èÈÅçÂéÜÁªìÊùüüõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏èüõ¨Ô∏è")
logRed("‰ª£Á†Å‰∏≠Êñá(ÂéªÈáç)Ôºö%dÂ§Ñ, xib‰∏≠Êñá(ÂéªÈáç)Ôºö%dÂ§Ñ"%(codeCNNum,xibCNNum))

def writeFile(path, data):
    if os.path.exists(path):
        os.remove(path)
    logCyanLink(path)
    with codecs.open(path, 'a', encoding='utf-8') as f2:
        f2.writelines(data)
        f2.close()

file_path1 = project_path + "/py_cnStr.txt"
xibTipPath = project_path + "/py_xibCnStr.xlsx"
whole_path = project_path + "/py_cn_wholePath.txt"
list1 = list(codeStr)
list2 = list(xibStr)
list3 = list(wholePathStr)

writeFile(file_path1, list1)
writeFile(xibTipPath, list2)
writeFile(whole_path, list3)
